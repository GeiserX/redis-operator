# Manager
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: redis-operator
    app.kubernetes.io/managed-by: kustomize
  name: redis-operator-system  # changed from default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-operator-controller-manager
  namespace: redis-operator-system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: redis-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: redis-operator
    spec:
      serviceAccountName: controller-manager
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault # Recommended
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values: ["linux"]
                  - key: kubernetes.io/arch
                    operator: In
                    values: ["amd64", "arm64"]
      containers:
        - name: manager
          image: drumsergio/redis-operator:0.0.1
          imagePullPolicy: Always
          command:
            - /manager
          args:
            - --leader-elect
            - --health-probe-bind-address=:8081
            # - --metrics-bind-address=:8080 # Prometheus
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            timeoutSeconds: 2
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 10
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
      terminationGracePeriodSeconds: 10